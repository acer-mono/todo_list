{"version":3,"sources":["store.ts","components/EditListItemForm/EditListItemForm.tsx","components/ListItem/ListItem.tsx","components/List/List.tsx","components/SearchPanel/SearchPanel.tsx","components/CreateForm/CreateForm.tsx","components/CategorySelect/CategorySelect.tsx","LoginForm.tsx","components/App/App.tsx","index.js"],"names":["ACTION_TYPES","FILTER_VALUES","InitialStore","list","Array","filterParams","category","searchString","changePosition","id","number","itemsList","previous","temp","current","length","elms","sort","el1","el2","position","i","selectListByFilter","state","filter","el","isDone","name","includes","EditListItem","item","dispatch","closeItem","useState","setName","button","useRef","data-testid","action","onSubmit","e","preventDefault","type","EDIT","payload","submitHandler","value","onChange","target","onBlur","relatedTarget","blurHandler","ref","ListItem","isFirst","isLast","isEdit","setIsEdit","style","textDecoration","checked","CHANGE_STATE","onClick","REMOVE","CHANGE_POSITION","List","map","index","SearchPanel","search","setSearch","CreateForm","setItem","setPosition","createListItem","newItem","Date","now","toString","Math","random","substr","CREATE","alert","event","CategorySelect","filterValues","updateCategory","setFilter","filterItem","LogInForm","auth","useAuth","provider","firebase","GoogleAuthProvider","signInWithPopup","then","result","console","log","catch","App","store","setStore","setCategory","db","database","useUser","data","user","setUser","newState","previousState","reducer","uid","set","updateState","useEffect","unregisterAuthObserver","onAuthStateChanged","newUser","on","snapshot","val","undefined","fallback","className","ReactDOM","render","StrictMode","firebaseConfig","document","getElementById"],"mappings":"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","file":"static/js/main.0cac08ad.chunk.js","sourcesContent":["export const FILTER_VALUES = ['All', 'Done', 'Not done'];\nexport type IFilterValues = typeof FILTER_VALUES;\n\nexport enum ACTION_TYPES {\n  REMOVE,\n  CHANGE_POSITION,\n  CHANGE_STATE,\n  EDIT,\n  CREATE\n}\n\nexport type Action =\n  | ActionRemove\n  | ActionChangePosition\n  | ActionChangeState\n  | ActionEdit\n  | ActionCreate;\n\ninterface ActionRemove {\n  type: typeof ACTION_TYPES.REMOVE;\n  payload: {\n    id: string;\n  };\n}\n\ninterface ActionChangePosition {\n  type: typeof ACTION_TYPES.CHANGE_POSITION;\n  payload: {\n    id: string;\n    number: number;\n  };\n}\n\ninterface ActionChangeState {\n  type: typeof ACTION_TYPES.CHANGE_STATE;\n  payload: {\n    id: string;\n    isDone: boolean;\n  };\n}\n\ninterface ActionEdit {\n  type: typeof ACTION_TYPES.EDIT;\n  payload: {\n    id: string;\n    name: string;\n  };\n}\n\ninterface ActionCreate {\n  type: typeof ACTION_TYPES.CREATE;\n  payload: {\n    item: Item;\n  };\n}\n\nexport interface Item {\n  id: string;\n  isDone: boolean;\n  name: string;\n  position: number;\n}\n\nexport const InitialStore = {\n  list: Array<Item>(),\n  filterParams: {\n    category: FILTER_VALUES[0],\n    searchString: ''\n  }\n};\n\nexport type StoreType = typeof InitialStore;\n\nexport function reducer(action: Action, previousState: StoreType = InitialStore) {\n  switch (action.type) {\n    case ACTION_TYPES.REMOVE: {\n      return {\n        ...previousState,\n        list: [...previousState.list.filter(el => el.id !== action.payload.id)]\n      };\n    }\n\n    case ACTION_TYPES.CHANGE_POSITION: {\n      return {\n        ...previousState,\n        list: changePosition(action.payload.id, action.payload.number, previousState.list)\n      };\n    }\n\n    case ACTION_TYPES.CHANGE_STATE: {\n      return {\n        ...previousState,\n        list: [\n          ...previousState.list.map(item => {\n            if (item.id === action.payload.id) {\n              item.isDone = action.payload.isDone;\n            }\n            return item;\n          })\n        ]\n      };\n    }\n\n    case ACTION_TYPES.EDIT: {\n      return {\n        ...previousState,\n        list: [\n          ...previousState.list.map(item => {\n            if (item.id === action.payload.id) {\n              item.name = action.payload.name;\n            }\n            return item;\n          })\n        ]\n      };\n    }\n\n    case ACTION_TYPES.CREATE: {\n      return { ...previousState, list: [...previousState.list, action.payload.item] };\n    }\n\n    default:\n      return { ...previousState };\n  }\n}\n\nexport function changePosition(id: string, number: number, itemsList: Item[]) {\n  let previous;\n  let current = 0;\n  let temp;\n\n  if (number > 0) {\n    previous = 0;\n  } else {\n    previous = itemsList.length - 1;\n  }\n\n  let elms = itemsList.sort((el1, el2) => el1.position - el2.position);\n  for (let i = 0; i < elms.length; i++) {\n    if (elms[i].id === id) {\n      if (number > 0) {\n        if (i !== 0) {\n          previous = i - 1;\n        }\n        current = i;\n        break;\n      } else {\n        if (i !== itemsList.length - 1) {\n          previous = i + 1;\n        }\n        current = i;\n        break;\n      }\n    }\n  }\n\n  temp = elms[previous].position;\n  elms[previous].position = elms[current].position;\n  elms[current].position = temp;\n\n  return [...elms];\n}\n\nexport function selectListByFilter(state: typeof InitialStore) {\n  state.list = state.list.sort((el1, el2) => el1.position - el2.position);\n  switch (state.filterParams.category) {\n    case FILTER_VALUES[1]:\n      return state.list.filter(\n        el => el.isDone && el.name.includes(state.filterParams.searchString)\n      );\n    case FILTER_VALUES[2]:\n      return state.list.filter(\n        el => !el.isDone && el.name.includes(state.filterParams.searchString)\n      );\n    default:\n      return state.list.filter(el => el.name.includes(state.filterParams.searchString));\n  }\n}\n","import React, { useRef, useState } from 'react';\nimport { Action, ACTION_TYPES, Item } from '../../store';\n\ninterface EditListItemFormProps {\n  item: Item;\n  dispatch: (action: Action) => void;\n  closeItem: () => void;\n}\n\nexport const EditListItem = ({ item, dispatch, closeItem }: EditListItemFormProps) => {\n  const [name, setName] = useState(item.name);\n  const button = useRef(null);\n\n  function submitHandler(e: React.FormEvent<HTMLFormElement>) {\n    e.preventDefault();\n    if (name !== '') {\n      dispatch({\n        type: ACTION_TYPES.EDIT,\n        payload: {\n          id: item.id,\n          name: name\n        }\n      });\n    }\n    closeItem();\n  }\n\n  function blurHandler(e: React.FocusEvent<HTMLInputElement>) {\n    if (e.relatedTarget === button.current && name !== '') {\n      dispatch({\n        type: ACTION_TYPES.EDIT,\n        payload: {\n          id: item.id,\n          name: name\n        }\n      });\n    }\n    closeItem();\n  }\n\n  return (\n    <div>\n      <form\n        data-testid=\"editForm\"\n        action=\"\"\n        onSubmit={(e: React.FormEvent<HTMLFormElement>) => submitHandler(e)}\n      >\n        <input\n          data-testid=\"edit-input\"\n          type=\"text\"\n          value={name}\n          onChange={e => {\n            setName(e.target.value);\n          }}\n          onBlur={e => blurHandler(e)}\n        />\n        <button data-testid=\"edit-button\" ref={button} type=\"submit\">\n          Save\n        </button>\n      </form>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { EditListItem } from '../EditListItemForm/EditListItemForm';\nimport { Action, ACTION_TYPES, Item } from '../../store';\n\ninterface ListItemProps {\n  item: Item;\n  isFirst: boolean;\n  isLast: boolean;\n  dispatch: (action: Action) => void;\n}\n\nexport const ListItem = ({ item, isFirst, isLast, dispatch }: ListItemProps) => {\n  const isDone = { textDecoration: 'line-through' };\n  const [isEdit, setIsEdit] = useState(false);\n\n  return (\n    <>\n      {!isEdit && (\n        <li data-testid=\"list-item\" style={item.isDone ? isDone : {}}>\n          {item.name}\n        </li>\n      )}\n      {isEdit && (\n        <EditListItem item={item} dispatch={dispatch} closeItem={() => setIsEdit(false)} />\n      )}\n      <input\n        data-testid=\"item-checkbox\"\n        type=\"checkbox\"\n        checked={item.isDone}\n        onChange={() =>\n          dispatch({\n            type: ACTION_TYPES.CHANGE_STATE,\n            payload: {\n              id: item.id,\n              isDone: !item.isDone\n            }\n          })\n        }\n      />\n      <button\n        data-testid=\"remove-button\"\n        onClick={() =>\n          dispatch({\n            type: ACTION_TYPES.REMOVE,\n            payload: {\n              id: item.id\n            }\n          })\n        }\n      >\n        Remove\n      </button>\n      <button data-testid=\"edit-cancel-button\" onClick={() => setIsEdit(!isEdit)}>\n        {!isEdit ? 'Edit' : 'Cancel'}\n      </button>\n      {!isFirst && (\n        <button\n          data-testid=\"up\"\n          onClick={() =>\n            dispatch({\n              type: ACTION_TYPES.CHANGE_POSITION,\n              payload: {\n                id: item.id,\n                number: 1\n              }\n            })\n          }\n        >\n          ↑\n        </button>\n      )}\n      {!isLast && (\n        <button\n          data-testid=\"down\"\n          onClick={() =>\n            dispatch({\n              type: ACTION_TYPES.CHANGE_POSITION,\n              payload: {\n                id: item.id,\n                number: -1\n              }\n            })\n          }\n        >\n          ↓\n        </button>\n      )}\n    </>\n  );\n};\n","import React from 'react';\nimport { ListItem } from '../ListItem/ListItem';\nimport { Item, Action } from '../../store';\n\ninterface ListProps {\n  list: Item[];\n  dispatch: (action: Action) => void;\n}\n\nexport const List = ({ list, dispatch }: ListProps) => {\n  return (\n    <ul>\n      {list.map((item, index) => (\n        <ListItem\n          key={item.id}\n          item={item}\n          isFirst={index === 0}\n          isLast={index === list.length - 1}\n          dispatch={dispatch}\n        />\n      ))}\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\n\nexport interface FilterArguments {\n  name: string;\n  value: string;\n}\n\ninterface SearchPanelProps {\n  filter: (action: FilterArguments) => void;\n}\n\nexport const SearchPanel = ({ filter }: SearchPanelProps) => {\n  const [search, setSearch] = useState('');\n  return (\n    <form\n      action=\"\"\n      onSubmit={e => {\n        e.preventDefault();\n        filter({ name: 'updateSearch', value: search });\n      }}\n    >\n      <input\n        data-testid=\"search-input\"\n        type=\"text\"\n        value={search}\n        onChange={e => setSearch(e.target.value)}\n      />\n      <button data-testid=\"search-button\" type=\"submit\">\n        Search\n      </button>\n    </form>\n  );\n};\n","import React, { useState } from 'react';\nimport { Action, ACTION_TYPES } from '../../store';\n\ninterface CreateFormProps {\n  dispatch: (item: Action) => void;\n}\n\nexport const CreateForm = ({ dispatch }: CreateFormProps) => {\n  const [item, setItem] = useState('');\n  const [position, setPosition] = useState(0);\n\n  const uid = function () {\n    return Date.now().toString(36) + Math.random().toString(36).substr(2);\n  };\n\n  function validate() {\n    return item !== '';\n  }\n\n  function createListItem() {\n    if (validate()) {\n      const newItem = { id: uid(), name: item, isDone: false, position: position };\n      setPosition(position => position + 1);\n      setItem('');\n      dispatch({\n        type: ACTION_TYPES.CREATE,\n        payload: { item: newItem }\n      });\n    } else {\n      alert('?');\n    }\n  }\n  return (\n    <>\n      <input\n        data-testid=\"create-input\"\n        type=\"text\"\n        value={item}\n        onChange={event => setItem(event.target.value)}\n      />\n      <button data-testid=\"create-button\" onClick={() => createListItem()}>\n        Добавить\n      </button>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport { IFilterValues } from '../../store';\n\nexport interface UpdateCategoryArguments {\n  name: string;\n  value: string;\n}\n\ninterface CategorySelectProps {\n  filterValues: IFilterValues;\n  updateCategory: (args: UpdateCategoryArguments) => void;\n}\n\nexport const CategorySelect = ({ filterValues, updateCategory }: CategorySelectProps) => {\n  const [filter, setFilter] = useState(filterValues[0]);\n  return (\n    <select\n      data-testid=\"select\"\n      name=\"select\"\n      value={filter}\n      onChange={e => {\n        setFilter(e.target.value);\n        updateCategory({ name: 'updateCategory', value: e.target.value });\n      }}\n    >\n      {filterValues.map((filterItem, index) => (\n        <option data-testid=\"category-option\" key={index} value={filterItem}>\n          {filterItem}\n        </option>\n      ))}\n    </select>\n  );\n};\n","import React from 'react';\nimport { useAuth } from 'reactfire';\nimport firebase from 'firebase';\n\nexport default function LogInForm() {\n  const auth = useAuth();\n\n  const login = (e: { preventDefault: () => void }) => {\n    e.preventDefault();\n    const provider = new firebase.auth.GoogleAuthProvider();\n    auth\n      .signInWithPopup(provider)\n      .then(result => console.log(result))\n      .catch(result => console.log(result));\n  };\n\n  return (\n    <button onClick={login} type=\"button\">\n      LOGIN WITH GOOGLE\n    </button>\n  );\n}\n","import React, { useState, Suspense, useEffect } from 'react';\nimport './App.css';\nimport { List } from '../List/List';\nimport { SearchPanel, FilterArguments } from '../SearchPanel/SearchPanel';\nimport { selectListByFilter, reducer, StoreType, InitialStore } from '../../store';\nimport { CreateForm } from '../CreateForm/CreateForm';\nimport { CategorySelect } from '../CategorySelect/CategorySelect';\nimport { Action, FILTER_VALUES } from '../../store';\nimport { AuthCheck, useUser } from 'reactfire';\nimport LogInForm from '../../LoginForm';\nimport firebase from 'firebase';\nimport 'firebase/auth';\n\nfunction App() {\n  const [store, setStore] = useState<StoreType>(InitialStore);\n  const [search, setSearch] = useState('');\n  const [category, setCategory] = useState(FILTER_VALUES[0]);\n  const db = firebase.database();\n  const [user, setUser] = useState(useUser().data);\n\n  useEffect(() => {\n    const unregisterAuthObserver = firebase.auth().onAuthStateChanged(newUser =>\n      setUser(() => {\n        if (newUser) {\n          db.ref(`stores/${newUser.uid}`).on('value', snapshot => {\n            const value = snapshot.val()?.store;\n            if (value === undefined) {\n              setStore(InitialStore);\n            } else {\n              setStore(value);\n            }\n          });\n          return newUser;\n        }\n        return user;\n      })\n    );\n    return () => unregisterAuthObserver();\n  }, []);\n\n  function dispatch(action: Action) {\n    if (user) {\n      const newState = reducer(action, store);\n      db.ref(`stores/${user.uid}`).set({\n        store: newState\n      });\n    }\n  }\n\n  function updateState(action: FilterArguments) {\n    switch (action.name) {\n      case 'updateSearch':\n        setSearch(action.value);\n        break;\n      case 'updateCategory':\n        setCategory(action.value);\n        break;\n    }\n  }\n\n  return (\n    <Suspense fallback=\"Loading...\">\n      <AuthCheck fallback={<LogInForm />}>\n        <div className=\"wrapper\">\n          <div>\n            <h1>Список дел</h1>\n            <h2>Лабораторная №2. Добавляем элемент в список</h2>\n          </div>\n          <div>\n            <CreateForm dispatch={dispatch} />\n            <CategorySelect filterValues={FILTER_VALUES} updateCategory={updateState} />\n            <br />\n            <SearchPanel filter={updateState} />\n            <br />\n            <List\n              list={selectListByFilter({\n                list: store.list,\n                filterParams: { category, searchString: search }\n              })}\n              dispatch={dispatch}\n            />\n          </div>\n        </div>\n      </AuthCheck>\n    </Suspense>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport { FirebaseAppProvider } from 'reactfire';\nimport firebaseConfig from './firebaseConfig.json';\n\nReactDOM.render(\n  <React.StrictMode>\n    <FirebaseAppProvider firebaseConfig={firebaseConfig}>\n      <App />\n    </FirebaseAppProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}